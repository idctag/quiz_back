// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package sqlc

import (
	"context"
)

type Querier interface {
	CreateAnswer(ctx context.Context, arg CreateAnswerParams) (Answer, error)
	CreateChoice(ctx context.Context, arg CreateChoiceParams) (Choice, error)
	CreatePhase(ctx context.Context, arg CreatePhaseParams) (Phase, error)
	CreateQuestion(ctx context.Context, arg CreateQuestionParams) (Question, error)
	CreateQuiz(ctx context.Context, name string) (Quiz, error)
	DeleteAnswer(ctx context.Context, id int64) error
	DeleteChoice(ctx context.Context, id int64) error
	DeletePhase(ctx context.Context, id int64) error
	DeleteQuestion(ctx context.Context, id int64) error
	DeleteQuiz(ctx context.Context, id int64) error
	GetAnswer(ctx context.Context, id int64) (Answer, error)
	GetAnswerByQuestion(ctx context.Context, questionID int64) (Answer, error)
	GetPhase(ctx context.Context, id int64) (Phase, error)
	GetQuestion(ctx context.Context, id int64) (Question, error)
	GetQuiz(ctx context.Context, id int64) (Quiz, error)
	ListAnswers(ctx context.Context, arg ListAnswersParams) ([]Answer, error)
	ListChoices(ctx context.Context, arg ListChoicesParams) ([]Choice, error)
	ListChoicesByQuestion(ctx context.Context, questionID int64) ([]Choice, error)
	ListPhases(ctx context.Context, arg ListPhasesParams) ([]Phase, error)
	ListQuestions(ctx context.Context, arg ListQuestionsParams) ([]Question, error)
	ListQuizzes(ctx context.Context, arg ListQuizzesParams) ([]Quiz, error)
	UpdateAnswer(ctx context.Context, arg UpdateAnswerParams) (Answer, error)
	UpdateChoice(ctx context.Context, arg UpdateChoiceParams) (Choice, error)
	UpdatePhase(ctx context.Context, arg UpdatePhaseParams) (Phase, error)
	UpdateQuestion(ctx context.Context, arg UpdateQuestionParams) (Question, error)
	UpdateQuiz(ctx context.Context, arg UpdateQuizParams) (Quiz, error)
}

var _ Querier = (*Queries)(nil)
